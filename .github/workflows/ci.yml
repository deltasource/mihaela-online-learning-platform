name: Build, Test, Jacoco Report, and Liquibase Migration

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  backend-checks:
    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          MYSQL_DATABASE: elearning_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: "temurin"

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -uroot -p"${SPRING_DATASOURCE_PASSWORD}" --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run Liquibase migrations
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/backend/src/main/resources/db/changelog:/liquibase/changelog \
            liquibase/liquibase \
            --url=jdbc:mysql://host.docker.internal:3306/elearning_db \
            --username=root \
            --password=${SPRING_DATASOURCE_PASSWORD} \
            --changeLogFile=changelog/db.changelog-master.xml \
            update

      - name: Run tests and generate coverage
        working-directory: backend
        run: mvn test jacoco:report

      - name: Build backend 
        working-directory: backend
        run: mvn package

      - name: Upload backend results 
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/target/surefire-reports/

  frontend-checks:
    runs-on: ubuntu-latest
    env:
      VITE_API_URL: ${{ secrets.VITE_API_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Build frontend 
        working-directory: frontend
        run: npm run build

      - name: Run tests
        working-directory: frontend
        run: npx vitest 
        